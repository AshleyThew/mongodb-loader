name: Release Plugin

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Get mongodb-driver-bom version
        id: get_bom_version
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # Use the tag name as the BOM version
            bom_version="${{ github.ref_name }}"
            echo "Using tag version: $bom_version"
          else
            # Get latest version from Maven Central
            bom_version=$(curl -s https://repo1.maven.org/maven2/org/mongodb/mongodb-driver-bom/maven-metadata.xml | grep -oPm1 "(?<=<latest>)[^<]+")
            echo "Using latest version from Maven Central: $bom_version"
          fi
          echo "::set-output name=bom_version::$bom_version"

      - name: Check if version contains alpha
        id: check_alpha
        run: |
          bom_version="${{ steps.get_bom_version.outputs.bom_version }}"
          if [[ "$bom_version" == *"alpha"* ]]; then
            echo "contains_alpha=true" >> $GITHUB_OUTPUT
            echo "Skipping release because version $bom_version contains 'alpha'"
          else
            echo "contains_alpha=false" >> $GITHUB_OUTPUT
            echo "Version $bom_version is stable, proceeding with release"
          fi

      - name: Check if release exists
        id: check_release
        if: steps.check_alpha.outputs.contains_alpha == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=${{ steps.get_bom_version.outputs.bom_version }}
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag")
          if echo "$response" | grep -q '"id":'; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Gradle
        if: steps.check_alpha.outputs.contains_alpha == 'false'
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        if: steps.check_alpha.outputs.contains_alpha == 'false'
        run: gradle build "-Pbom_version=${{ steps.get_bom_version.outputs.bom_version }}"

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: steps.check_alpha.outputs.contains_alpha == 'false' && (steps.check_release.outputs.exists == 'false' || github.event_name == 'push')
        with:
          tag_name: ${{ steps.get_bom_version.outputs.bom_version }}
          name: Release ${{ steps.get_bom_version.outputs.bom_version }}
          files: build/libs/mongodb-loader-${{ steps.get_bom_version.outputs.bom_version }}.jar

      - name: Create GitHub Issue to upload to dev.bukkit.org
        if: steps.create_release.outcome == 'success' && steps.check_alpha.outputs.contains_alpha == 'false'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueTitle = `Upload mongodb-loader-${{ steps.get_bom_version.outputs.bom_version }} to dev.bukkit.org`;
            const issueBody = `Please upload the new version (mongodb-loader-${{ steps.get_bom_version.outputs.bom_version }}.jar) to dev.bukkit.org.\n\n- [ ] Upload the JAR to dev.bukkit.org\n- [ ] Fill out the changelog and version details\n\n**Deadline:** ${(new Date(Date.now() + 24*60*60*1000)).toISOString().split('T')[0]}\n\nThis issue was automatically created by the release workflow.`;
            const assignees = ['AshleyThew'];
            await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              assignees: assignees
            });
