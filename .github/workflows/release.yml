name: Release Plugin

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Get latest mongodb-driver-bom version
        id: get_bom_version
        run: |
          latest_bom_version=$(curl -s https://repo1.maven.org/maven2/org/mongodb/mongodb-driver-bom/maven-metadata.xml | grep -oPm1 "(?<=<latest>)[^<]+")
          echo "::set-output name=bom_version::$latest_bom_version"

      - name: Check if release exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "exists=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          tag=${{ steps.get_bom_version.outputs.bom_version }}
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag")
          if echo "$response" | grep -q '"id":'; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: gradle build -Pbom_version=${{ steps.get_bom_version.outputs.bom_version }}

      - name: Create Release
        id: create_release
        if: steps.check_release.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_bom_version.outputs.bom_version }}
          release_name: Release ${{ steps.get_bom_version.outputs.bom_version }}
          draft: false
          prerelease: false

      - name: Upload JAR to Release
        if: steps.check_release.outputs.exists == 'false'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/mongodb-loader-${{ steps.get_bom_version.outputs.bom_version }}.jar
          asset_name: mongodb-loader-${{ steps.get_bom_version.outputs.bom_version }}.jar
          asset_content_type: application/java-archive
